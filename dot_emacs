(require 'package) 
(add-to-list 'package-archives
             '("melpa" . "http://melpa.org/packages/") t)
(when (< emacs-major-version 24)
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
(package-initialize)

(prefer-coding-system 'utf-8-unix)

(require 'saveplace)
(setq-default save-place t)

(global-set-key (kbd "M-/") 'hippie-expand)
(global-set-key (kbd "C-x C-b") 'helm-buffers-list)
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key "\C-xf" 'helm-find-files)

(when (fboundp 'windmove-default-keybindings)
  (windmove-default-keybindings))

(require 'recentf)
(setq recentf-auto-cleanup 'never)
(recentf-mode 1)

(desktop-save-mode 1)

;;(require 'evil)
;;(evil-mode 1)

(require 'helm-config)
(helm-mode 1)

(require 'smartparens)
(smartparens-mode 1)

(setq tramp-default-method "ssh")

(require 'powerline)
(powerline-default-theme)

(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)
(setenv "PATH" (concat (getenv "PATH") ":/usr/local/bin"))
(setq exec-path (append exec-path '("/usr/local/bin")))
<<<<<<< HEAD
;;execute script in org file with C-c C-c
;;(org-babel-do-load-languages
;; 'org-babel-load-languages
;; '((sh         . t)
;;   (emacs-lisp . t)
;;   (python     . t)
;;   (plantuml   . t)))

;; deal with MacOS X bovine excrement
(setq mac-option-key-is-meta nil)
(setq mac-command-key-is-meta t)
(setq mac-command-modifier 'meta)
(setq mac-option-modifier nil)


;;(setq org-confirm-babel-evaluate nil)
;;(setq org-src-fontify-natively t)

;; (defun org-babel-temp-file (prefix &optional suffix)
;;   "Create a temporary file in the `org-babel-temporary-directory'.
;; Passes PREFIX and SUFFIX directly to `make-temp-file' with the
;; value of `temporary-file-directory' temporarily set to the value
;; of `org-babel-temporary-directory'."
;;   (if (file-remote-p default-directory)
;;       (let ((prefix
;;              ;; We cannot use `temporary-file-directory' as local part
;;              ;; on the remote host, because it might be another OS
;;              ;; there.  So we assume "/tmp", which ought to exist on
;;              ;; relevant architectures.
;;              (concat (file-remote-p default-directory)
;;                      ;; REPLACE temporary-file-directory with /tmp:
;;                      (expand-file-name prefix "/tmp/"))))
;;         (make-temp-file prefix nil suffix))
;;     (let ((temporary-file-directory
;;            (or (and (boundp 'org-babel-temporary-directory)
;;                     (file-exists-p org-babel-temporary-directory)
;;                     org-babel-temporary-directory)
;;                temporary-file-directory)))
;;       (make-temp-file prefix nil suffix))))

(cua-mode t)
(golden-ratio-mode t)
(setq inhibit-startup-screen t)
(show-paren-mode t)
(tool-bar-mode -1)
=======
>>>>>>> parent of 0545d1a... babel execute script in org file

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (sanityinc-solarized-dark)))
 '(custom-safe-themes
   (quote
<<<<<<< HEAD
    ("4aee8551b53a43a883cb0b7f3255d6859d766b6c5e14bcb01bed572fcbef4328" default))))
=======
    ("4aee8551b53a43a883cb0b7f3255d6859d766b6c5e14bcb01bed572fcbef4328" "f0d8af755039aa25cd0792ace9002ba885fd14ac8e8807388ab00ec84c9497d7" default)))
 '(golden-ratio-mode t)
 '(inhibit-startup-screen t)
 '(package-selected-packages
   (quote
    (color-theme-sanityinc-solarized grandshell-theme auto-complete w3m powerline smartparens nyan-mode helm golden-ratio evil)))
 '(show-paren-mode t)
 '(tool-bar-mode nil))
>>>>>>> parent of 0545d1a... babel execute script in org file
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
